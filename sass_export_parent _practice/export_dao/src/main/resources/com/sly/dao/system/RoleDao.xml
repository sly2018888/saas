<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sly.dao.system.RoleDao" >

    <resultMap id="BaseResultMap" type="com.sly.domain.system.Role">
        <id column="role_id" property="id"/>
        <result column="name" property="name"/>
        <result column="company_id" property="companyId"/>
        <result column="company_name" property="companyName"/>
        <result column="order_no" property="orderNo"/>
        <result column="create_by" property="createBy"/>
        <result column="create_dept" property="createDept"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
    </resultMap>


    <select id="findAll" parameterType="String" resultMap="BaseResultMap">
        select * from pe_role where company_id = #{companyId} order by order_no asc ,create_time desc
    </select>

    <insert id="addRole" parameterType="com.sly.domain.system.Role">
        insert into pe_role (
        role_id,
        name,
        company_id,
        company_name,
        order_no,
        create_by,
        create_dept,
        create_time,
        update_by,
        update_time,
        remark
        )
        VALUES (
        #{id},
        #{name} ,
        #{companyId} ,
        #{companyName} ,
        #{orderNo} ,
        #{createBy} ,
        #{createDept} ,
        #{createTime} ,
        #{updateBy} ,
        #{updateTime} ,
        #{remark}
        )
    </insert>

    <update id="updateRole" parameterType="com.sly.domain.system.Role">
        UPDATE pe_role
        <set>
            <if test="name!=null and name!=''">
                name     =#{name} ,
            </if>
            <if test="companyId!=null and companyId!=''">
                company_id  =#{companyId} ,
            </if>
            <if test="companyName!=null and companyName!=''">
                company_name=#{companyName} ,
            </if>
            <if test="orderNo!=null and orderNo!=''">
                order_no    =#{orderNo} ,
            </if>
            <if test="createBy!=null and createBy!=''">
                create_by   =#{createBy} ,
            </if>
            <if test="createDept!=null and createDept!=''">
                create_dept =#{createDept} ,
            </if>
            <if test="createTime!=null and createTime!=''">
                create_time =#{createTime} ,
            </if>
            <if test="updateBy!=null and updateBy!=''">
                update_by   =#{updateBy} ,
            </if>
            <if test="updateTime!=null and updateTime!=''">
                update_time =#{updateTime} ,
            </if>
            <if test="remark!=null and remark!=''">
                remark      =#{remark},
            </if>
        </set>
        WHERE role_id = #{id}
    </update>

    <delete id="deleteById" parameterType="String">
        DELETE from pe_role WHERE role_id=#{id}
    </delete>

    <select id="findById" parameterType="String" resultMap="BaseResultMap">
        select * from pe_role where role_id = #{id}
    </select>
    
    <select id="findModuleById" parameterType="String" >
        select * from pe_role_module WHERE role_id = #{roleid};
    </select>

    <select id="findRolesById" parameterType="String" resultType="String">
      select role_id from pe_role_user  where user_id= #{userId};
    </select>

    <resultMap id="BaseResultMap1" type="com.sly.domain.system.Module">
        <id column="module_id" property="id"/>

        <result column="parent_id" property="pId"/>
        <result column="parent_name" property="parentName"/>
        <result column="name" property="name"/>
        <result column="layer_num" property="layerNum"/>
        <result column="is_leaf" property="isLeaf"/>
        <result column="ico" property="ico"/>
        <result column="cpermission" property="cpermission"/>
        <result column="curl" property="curl"/>
        <result column="ctype" property="ctype"/>
        <result column="state" property="state"/>
        <result column="belong" property="belong"/>
        <result column="cwhich" property="cwhich"/>
        <result column="quote_num" property="quoteNum"/>
        <result column="remark" property="remark"/>
        <result column="order_no" property="orderNo"/>
    </resultMap>
    
    
    <select id="getZtreeNodes" parameterType="String" resultMap="BaseResultMap1">
        select sm.* from pe_role_module prm ,ss_module sm WHERE prm.role_id=#{roleid} and prm.module_id = sm.module_id;
--         select * from ss_module  WHERE prm.role_id=#{roleid} and prm.module_id = sm.module_id;
    </select>

    <select id="findModulesByRoleId" parameterType="String" resultType="String">
        select module_id from pe_role_module where role_id = #{roleid}
    </select>

    <delete id="deleteRoleModule" parameterType="String">
        DELETE from pe_role_module WHERE role_id = #{roleid}
    </delete>

    <insert id="addRoleModule" parameterType="String">
        insert into pe_role_module (role_id,module_id) values (#{roleid},#{s})
    </insert>
    

</mapper>
